(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{365:function(t,e,s){"use strict";s.r(e);var a=s(45),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"guide"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#guide"}},[t._v("#")]),t._v(" Guide")]),t._v(" "),s("h2",{attrs:{id:"how-to-participate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#how-to-participate"}},[t._v("#")]),t._v(" How to participate?")]),t._v(" "),s("h3",{attrs:{id:"want-to-store-data-on-memoriae"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#want-to-store-data-on-memoriae"}},[t._v("#")]),t._v(" > Want to store data on Memoriae?")]),t._v(" "),s("p",[t._v("If you want to store data on decentralized cloud, then you can participate Memoriae as a User.")]),t._v(" "),s("p",[s("strong",[t._v("Operational Requirements")])]),t._v(" "),s("ul",[s("li",[t._v("Recommended configuration: 4 cores, 8G memory, 20Mbps bandwidth;")]),t._v(" "),s("li",[t._v("External network ip, port 4001 is usable;")]),t._v(" "),s("li",[t._v("Docker environment;")])]),t._v(" "),s("p",[s("strong",[t._v("Get the Docker Image")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" docker pull memoio/mefs-user:latest\n")])])]),s("p",[s("strong",[t._v("Generate Account")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" docker run -it -v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("your "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("local")]),t._v(" storage dir"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(":/root --entrypoint"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/app/create"')]),t._v(" memoio/mefs-user:latest\n")])])]),s("p",[t._v('Then input the password of mefs-user(at least 8 digits, the default is "memoriae") as prompted, and the keyfile of mefs-user is stored in the < your local storage >/.mefs/keystore directory.')]),t._v(" "),s("p",[t._v("An example of generating an account:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" docker run -it -v ~/docker-test/user:/root --entrypoint"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/app/create"')]),t._v(" memoio/mefs-user:latest\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" please input your password"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("at least "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12345678")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Private Key: 5cac2aaf3aa4c086a381cc0e74fdc3d685a99db5d320a2e0265ea426cf3d7894\n  Address: 0x32Ae578B69c2e3B484DEB01F6B5E65b9a61bC2a0\n")])])]),s("p",[t._v('The generated address is "0x32Ae578B69c2e3B484DEB01F6B5E65b9a61bC2a0", the private key is "5cac2aaf3aa4c086a381cc0e74fdc3d685a99db5d320a2e0265ea426cf3d7894", the keyfile is stored in the ~/docker-test/user/.mefs/keystore directory, the file name is "0x32Ae578B69c2e3B484DEB01F6B5E65b9a61bC2a0", the password is "12345678".')]),t._v(" "),s("p",[s("strong",[t._v("Apply for Test Tokens")])]),t._v(" "),s("p",[t._v("Send an email to sup@memolabs.io to apply for test tokens.")]),t._v(" "),s("p",[t._v("Email content: account address (such as 0x... generated above)„ÄÅrole (user)")]),t._v(" "),s("p",[s("strong",[t._v("Start User")])]),t._v(" "),s("p",[t._v("Due to the need to deploy contracts and match nodes during the initial startup, it takes about 30 minutes.")]),t._v(" "),s("ul",[s("li",[t._v("Start Command:")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("//Start docker"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" port "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4001")]),t._v(" is used "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" network connection, "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5080")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" S3 interface\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" docker run -d --stop-timeout "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -p "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("External Port Num"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Port Num"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("storage dir"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(":/root "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -e "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("TRANSPORT")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Port Num"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -e "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("WALLET")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0x..."')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -e "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("PASSWORD")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<your password>"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --mount "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("bind,source"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<keystore dir>"')]),t._v(",destination"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/app/keystore "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("countainer name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" memoio/mefs-keeper:latest\n")])])]),s("ul",[s("li",[t._v("Parameter Explanation:")])]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("WALLET:")]),t._v(" Account address (0x...), must be specified;\n"),s("strong",[t._v("PASSWORD:")]),t._v(" The password of the keyfile. If the user is running in the docker background mode, it must be specified; if it is running in the foreground mode, it can be entered during the running process;\n"),s("strong",[t._v("STORAGESIZE:")]),t._v(" The size of storage space used, such as 10GB, 1000MB, 1TB, etc, the default is 1TB;\n"),s("strong",[t._v("GATEWAY:")]),t._v(" Whether to enable the gateway mode, after enabling, port 5080 provides external minio S3 interface service; the user name is WALLET, the password is PASSWORD; it is enabled by default;\n"),s("strong",[t._v("storage dir:")]),t._v(" data directory;\n"),s("strong",[t._v("keystore dir:")]),t._v(" The location of the keyfile exported after registration, the name of the keyfile is WALLET;")])]),t._v(" "),s("ul",[s("li",[t._v("Log File:")])]),t._v(" "),s("p",[t._v("In the "),s("em",[t._v("< storage dir >/.mefs")]),t._v(" directory, there are startup log daemon.stdout.xx and the running log in the "),s("em",[t._v("logs")]),t._v(" directory;")]),t._v(" "),s("p",[t._v("Through the running log, you can view the running status of the keeper node; when an error occurs, you can view the startup log;")]),t._v(" "),s("p",[s("strong",[t._v("Enter the Terminal")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("//enter the docker\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" docker "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" -it "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("container name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v("\n")])])]),s("ul",[s("li",[t._v("For the use of cli, see the "),s("a",{attrs:{href:"#-as-a-user"}},[t._v("command document")]),t._v(".")]),t._v(" "),s("li",[t._v("S3 interface usage see "),s("a",{attrs:{href:"https://github.com/memoio/testnet/tree/master/docs/api",target:"_blank",rel:"noopener noreferrer"}},[t._v("S3 document"),s("OutboundLink")],1),t._v(".")])]),t._v(" "),s("h3",{attrs:{id:"want-to-gain-revenue-from-unused-storage-space-and-bandwidth"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#want-to-gain-revenue-from-unused-storage-space-and-bandwidth"}},[t._v("#")]),t._v(" > Want to gain revenue from unused storage space and bandwidth?")]),t._v(" "),s("p",[t._v("If you has idle storage space and bandwidth, and you want to get some profit through it, you can participate Memoriae as a Provider.")]),t._v(" "),s("p",[s("strong",[t._v("Operational Requirements")])]),t._v(" "),s("ul",[s("li",[t._v("Recommended configuration: 4 cores, 8G memory, 1TB storage, 20Mbps bandwidth;")]),t._v(" "),s("li",[t._v("External network ip, port 4001 is usable;")]),t._v(" "),s("li",[t._v("Docker environment;")])]),t._v(" "),s("p",[s("strong",[t._v("Get the Docker Image")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" docker pull memoio/mefs-provider:latest\n")])])]),s("p",[s("strong",[t._v("Generate Account")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('> docker run -it -v <your local storage dir>:/root --entrypoint="/app/create" memoio/mefs-provider:latest\n')])])]),s("p",[t._v('Then input the password of mefs-provider(at least 8 digits, the default is "memoriae") as prompted, and the keyfile of mefs-provider is stored in the < your local storage >/.mefs/keystore directory.')]),t._v(" "),s("p",[t._v("An example of generating an account:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('> docker run -it -v ~/docker-test/provider:/root --entrypoint="/app/create" memoio/mefs-provider:latest\n> please input your password(at least 8): 12345678\n> Private Key: 5cac2aaf3aa4c086a381cc0e74fdc3d685a99db5d320a2e0265ea426cf3d7894\n  Address: 0x32Ae578B69c2e3B484DEB01F6B5E65b9a61bC2a0\n')])])]),s("p",[t._v('The generated address is "0x32Ae578B69c2e3B484DEB01F6B5E65b9a61bC2a0", the private key is "5cac2aaf3aa4c086a381cc0e74fdc3d685a99db5d320a2e0265ea426cf3d7894", the keyfile is stored in the ~/docker-test/provider/.mefs/keystore directory, the file name is "0x32Ae578B69c2e3B484DEB01F6B5E65b9a61bC2a0", the password is "12345678".')]),t._v(" "),s("p",[s("strong",[t._v("Register Provider")])]),t._v(" "),s("p",[t._v("Send an email to sup@memolabs.io to apply for provider registration.")]),t._v(" "),s("p",[t._v("Email content: account address (such as 0x... generated above)„ÄÅrole (provider)")]),t._v(" "),s("p",[s("strong",[t._v("Start Provider")])]),t._v(" "),s("p",[t._v("Requirements: The 4001 port of the machine can be accessed by the public network, or there is a port mapping on the export machine.")]),t._v(" "),s("ul",[s("li",[t._v("Start Command:")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('//Start docker; port 4001 is used for network connection\nsudo docker run -d --stop-timeout 30 \\\n    -p <External Port Num>:<Port Num> \\\n    -v <storage dir>:/root \\\n    -e TRANSPORT=<Port Num> \\\n    -e WALLET="0x..." \\\n    -e PASSWORD="<your password>" \\\n    -e STORAGESIZE="1TB" \\\n    -e STORAGEPRICE="4000000000"\n    -e STORAGEDURATION="100"\n    -e POSENABLE="false" \\\n    --mount type=bind,source="<keystore dir>",destination=/app/keystore \\\n    --name <countainer name> memoio/mefs-provider:latest\n')])])]),s("ul",[s("li",[t._v("Parameter Explanation:")])]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("TRANSPORT")]),t._v("Ôºö< Port Num > is the network port of the program, the default is 4001; < External Port Num > is the port mapped out by docker, and the default can be the same as < Port Num >;\n"),s("strong",[t._v("WALLET")]),t._v("ÔºöAccount address (0x...), must be specified;\n"),s("strong",[t._v("PASSWORD")]),t._v("ÔºöThe password of the keyfile. If the provider is running in the docker background mode, it must be specified; if it is running in the foreground mode, it can be entered during the running process;\n"),s("strong",[t._v("STORAGESIZE")]),t._v("ÔºöThe size of the storage space provided, such as 10GB, 1000MB, 1TB, etc., the default is 1TB;\n"),s("strong",[t._v("STORAGEPRICE")]),t._v("ÔºöThe unit price of the storage space provided, unit is token/MB/hour, the default is 4 * 10^9;\n"),s("strong",[t._v("STORAGEDURATION")]),t._v("ÔºöProvided storage time, unit is day, default 100;\n"),s("strong",[t._v("POSENABLE")]),t._v("ÔºöWhether to enable the cold data filling function, set true to enable; the default is false;\n"),s("strong",[t._v("storage dir")]),t._v("Ôºödata directory;\n"),s("strong",[t._v("keystore dir")]),t._v("ÔºöThe location of the keyfile exported after registration, the name of the keyfile is WALLET;")])]),t._v(" "),s("p",[t._v("It takes about 20 minutes for the first startup.")]),t._v(" "),s("ul",[s("li",[t._v("Log File:")])]),t._v(" "),s("p",[t._v("In the "),s("em",[t._v("< storage dir >/.mefs")]),t._v(" directory, there are startup log daemon.stdout.xx and the running log in the "),s("em",[t._v("logs")]),t._v(" directory;")]),t._v(" "),s("p",[t._v("Through the running log, you can view the running status of the keeper node; when an error occurs, you can view the startup log;")]),t._v(" "),s("p",[s("strong",[t._v("Enter the Terminal")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// enter the docker\n> sudo docker exec -it <container name> bash\n")])])]),s("p",[t._v("The parameter explanation of each command can be found in the "),s("a",{attrs:{href:"#-as-a-provider"}},[t._v("documentation")])]),t._v(" "),s("h3",{attrs:{id:"only-a-small-amount-of-free-storage-space"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#only-a-small-amount-of-free-storage-space"}},[t._v("#")]),t._v(" > Only a small amount of free storage space?")]),t._v(" "),s("p",[t._v("If you have only a small amount of free storage space, and you want to participate Memoriae, then you can become a Keeper in Memoriae.")]),t._v(" "),s("p",[s("strong",[t._v("Operational Requirements")])]),t._v(" "),s("ul",[s("li",[t._v("Recommended configuration: 4 cores, 8G memory, 200GB storage, 20Mbps bandwidth;")]),t._v(" "),s("li",[t._v("External network ip, port 4001 is usable;")]),t._v(" "),s("li",[t._v("Docker environment;")])]),t._v(" "),s("p",[s("strong",[t._v("Get the Docker Image")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" docker pull memoio/mefs-keeper:latest\n")])])]),s("p",[s("strong",[t._v("Generate Account")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" docker run -it -v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("your "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("local")]),t._v(" storage dir"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(":/root --entrypoint"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/app/create"')]),t._v(" memoio/mefs-keeper:latest\n")])])]),s("p",[t._v('Then input the password of mefs-keeper(at least 8 digits, the default is "memoriae") as prompted, and the keyfile of mefs-keeper is stored in the < your local storage >/.mefs/keystore directory.')]),t._v(" "),s("p",[t._v("An example of generating an account:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" docker run -it -v ~/docker-test/keeper:/root --entrypoint"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/app/create"')]),t._v(" memoio/mefs-keeper:latest\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" please input your password"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("at least "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12345678")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Private Key: 5cac2aaf3aa4c086a381cc0e74fdc3d685a99db5d320a2e0265ea426cf3d7894\n  Address: 0x32Ae578B69c2e3B484DEB01F6B5E65b9a61bC2a0\n")])])]),s("p",[t._v('The generated address is "0x32Ae578B69c2e3B484DEB01F6B5E65b9a61bC2a0", the private key is "5cac2aaf3aa4c086a381cc0e74fdc3d685a99db5d320a2e0265ea426cf3d7894", the keyfile is stored in the ~/docker-test/keeper/.mefs/keystore directory, the file name is "0x32Ae578B69c2e3B484DEB01F6B5E65b9a61bC2a0", the password is "12345678".')]),t._v(" "),s("p",[s("strong",[t._v("Register Keeper")])]),t._v(" "),s("p",[t._v("Send an email to sup@memolabs.io to apply for keeper registration.")]),t._v(" "),s("p",[t._v("Email content: account address (such as 0x... generated above)„ÄÅrole (keeper)")]),t._v(" "),s("p",[s("strong",[t._v("Start Keeper")])]),t._v(" "),s("p",[t._v("Requirements: The 4001 port of the machine can be accessed by the public network, or there is a port mapping on the export machine.")]),t._v(" "),s("ul",[s("li",[t._v("Start Command:")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("//Start docker"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" port "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4001")]),t._v(" is used "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" network connection\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" docker run -d --stop-timeout "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -p "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("External Port Num"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Port Num"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("storage dir"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(":/root "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -e "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("TRANSPORT")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Port Num"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -e "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("WALLET")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0x..."')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -e "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("PASSWORD")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<your password>"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --mount "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("bind,source"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<keystore dir>"')]),t._v(",destination"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/app/keystore "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("countainer name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" memoio/mefs-keeper:latest\n")])])]),s("ul",[s("li",[t._v("Parameter Explanation:")])]),t._v(" "),s("blockquote",[s("p",[t._v("TRANSPORT: < Port Num > is the network port of the program, the default is 4001; < External Port Num > is the port mapped out by docker, and the default can be the same as < Port Num >;")])]),t._v(" "),s("blockquote",[s("p",[t._v("WALLET: Account address (0x...), must be specified;\nPASSWORD: The password of the keyfile. If the keeper is running in the docker background mode, it must be specified; if it is running in the foreground mode, it can be entered during the running process;\nstorage dir: data directory;\nkeystore dir: The location of the keyfile exported after registration, the name of the keyfile is WALLET;")])]),t._v(" "),s("p",[t._v("It takes about 20 minutes for the first startup.")]),t._v(" "),s("ul",[s("li",[t._v("Log File:")])]),t._v(" "),s("p",[t._v("In the "),s("em",[t._v("< storage dir >/.mefs")]),t._v(" directory, there are startup log daemon.stdout.xx and the running log in the "),s("em",[t._v("logs")]),t._v(" directory;")]),t._v(" "),s("p",[t._v("Through the running log, you can view the running status of the keeper node; when an error occurs, you can view the startup log;")]),t._v(" "),s("p",[s("strong",[t._v("Enter the Terminal")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("//enter the docker\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" docker "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" -it "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("container name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v("\n")])])]),s("p",[t._v("The parameter explanation of each command can be found in the "),s("a",{attrs:{href:"http://132.232.87.203:8088/508dev/dev-github/tree/master/docs/cmd",target:"_blank",rel:"noopener noreferrer"}},[t._v("documentation"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"get-test-tokens"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get-test-tokens"}},[t._v("#")]),t._v(" Get test tokens")]),t._v(" "),s("p",[s("a",{attrs:{href:""}},[t._v("ÂæÖÂÆö")])]),t._v(" "),s("h2",{attrs:{id:"how-to-operate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#how-to-operate"}},[t._v("#")]),t._v(" How to operate?")]),t._v(" "),s("h3",{attrs:{id:"as-a-user"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#as-a-user"}},[t._v("#")]),t._v(" > As a user")]),t._v(" "),s("h4",{attrs:{id:"command-details"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#command-details"}},[t._v("#")]),t._v(" Command details")]),t._v(" "),s("p",[s("strong",[t._v("start up")])]),t._v(" "),s("ul",[s("li",[t._v("initialization")])]),t._v(" "),s("p",[t._v("Mefs initialization, the default initialized directory is $HOME/.mefs, you can set the initialized directory by export MEFS_PATH="),s("local",{attrs:{dir:""}},[t._v(", and then run init.")])],1),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" mefs-user init --netKey"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("net key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --sk"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("your private key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --pwd"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("your password"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --keyfile"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("absolute path of your keyfile"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("Parameter explanation:")]),t._v(" "),s("blockquote",[s("p",[t._v("skÔºöprivate key address;\npwdÔºöpassword;\nkeyfile:the full path of the keyfile file;\nnetKey:private network symbol, now has dev and testnet; networks with the same symbol can be interconnected.")])]),t._v(" "),s("ul",[s("li",[t._v("Modify the network transmission port")])]),t._v(" "),s("p",[t._v("The default is port 4001, if you need to change to "),s("port",{attrs:{num:""}},[t._v(", execute the following command:")])],1),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("// execute before running daemon\nmefs-user config --json Addresses.Swarm "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"['),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("/ip4/0.0.0.0/tcp/<port num>"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(']"')]),t._v("\n")])])]),s("p",[t._v("For example, change to port 4090:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("// execute before running daemon\nmefs-user config --json Addresses.Swarm "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"['),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("/ip4/0.0.0.0/tcp/4090"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(']"')]),t._v("\n")])])]),s("ul",[s("li",[t._v("Startup example")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("// Run "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" the background\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" mefs-user daemon --netKey"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("net key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --pwd"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("your password"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" log "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("&1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n")])])]),s("p",[t._v("Parameter explanation:")]),t._v(" "),s("blockquote",[s("p",[t._v("pwdÔºöpassword;\nnetKey: private network symbol, now has dev and testnet.\nStart user's LFS")])]),t._v(" "),s("p",[t._v("After starting the mefs daemon, the user starts its storage space.")]),t._v(" "),s("p",[t._v("Due to the need to match the contract and deploy the contract, it takes about 30 minutes to start.")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" mefs-user lfs start "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("public address"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --sk"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("private key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --pwd"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("password"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --dur"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("duration"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --cap"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("capacity"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --price"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("price"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --ks"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("keeper SLA"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --ps"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("provider SLA"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("Parameter explanation:")]),t._v(" "),s("blockquote",[s("p",[t._v("public addressÔºöaccount addressÔºà0x...ÔºâÔºõlocal account's public address by default;\nskÔºöprivate key addressÔºõ import from local private key file by default;\npwdÔºöpassword; DEFAULTPASSWORD by default;\ndurÔºöthe storage time provided; calculated in days, the default is 100;\ncapÔºöprovided storage size; calculated in MB, the default is 1TB;\npriceÔºöthe storage price provided, calculated by weiDollar/MB/hour, and the default is 4 * 10^9; about 3 USD/(TB*month);\nksÔºöthe number of keeper required, the default is 3;\npsÔºöthe number of provider required, the default is 6;")])]),t._v(" "),s("h4",{attrs:{id:"use-lfs-cli"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#use-lfs-cli"}},[t._v("#")]),t._v(" Use LFSÔºàcliÔºâ")]),t._v(" "),s("p",[t._v("MEFS provides each user with a dedicated encrypted storage space (LFS). Each storage space contains multiple buckets. A bucket is a container for users to store objects. Each bucket contains multiple objects ( object), we can think of objects as files. The redundancy policy of the bucket can be specified when it is created (all objects stored in the bucket use this redundancy policy), and the object data is encrypted using symmetric encryption.")]),t._v(" "),s("p",[t._v("The user can operate data through command line, network (http), and gateway.")]),t._v(" "),s("p",[t._v("It can also be operated through the sdk, and only the go version is currently available.")]),t._v(" "),s("p",[s("strong",[t._v("bucket operation")])]),t._v(" "),s("ul",[s("li",[t._v("create bucket")])]),t._v(" "),s("p",[t._v("command descriptionÔºö"),s("code",[t._v("create_bucket")]),t._v(" creates a bucket based on the name of BucketName. Each bucket can be set with different redundancy strategies. The redundancy strategy is multiple replicas or erasure codes (Reed-Solomon Codes). The number of data blocks and check blocks can be adjusted to determine the level of redundancy. The erasure codes of 3 data blocks and 2 check blocks are used by default, and the loss of two blocks can be tolerated.")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" mefs-user lfs create_bucket "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("BucketName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --policy"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("redundancy"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --dc"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("data count"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --pc"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("parity count"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --addr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("public key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("command description:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("--BucketName: name of bucket, minimum "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" bytes and maximum "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("256")]),t._v(" bytes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n--policyÔºöredundancy strategy, --policy"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" means to use erasure codes, --policy"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" means to use multiple copies, and erasure codes are used by default"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n--dcÔºöthe number of data blocks, the default is "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n--pcÔºöthe number of check blocks, the default is "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" when using the multiple copy strategy, the actual data block is "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(", and the check block is dc+pc-1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n--addr: the address of user, "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("which")]),t._v(" is empty by default, indicating that is the address of the "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("local")]),t._v(" node.\n")])])]),s("p",[t._v("result output:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("Method: Create Bucket    // "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v(" name\nBucketName: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("BucketName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" // name of created bucket\n--BucketID: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("BucketID"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  // internal ID of bucket\n--Ctime: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Ctime"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" // create "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("time")]),t._v("\n--Policy: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Policy"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" // redundancy strategy\n--DataCount: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("DataCount"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" // number of data block\n--ParityCount: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ParityCount"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  // number of check blocks\n")])])]),s("ul",[s("li",[t._v("Bucket List")])]),t._v(" "),s("p",[t._v("command descriptionÔºö"),s("code",[t._v("list_buckets")]),t._v(" display all buckets created by this user, including the name (BucketName), creation time (Ctime), redundancy policy (Policy) and redundancy parameters (DataCount, ParityCount) of each bucket.")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" mefs-user lfs list_buckets --addr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("public key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("Parameter explanation:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("--addr: user address, "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("which")]),t._v(" is empty by default, indicating that is the address of the "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("local")]),t._v(" node.\n")])])]),s("p",[t._v("result output:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("Method: List Buckets\nBucketName: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("BucketName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n--BucketID: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("BucketID"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n--Ctime: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Ctime"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n--Policy: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Policy"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n--DataCount: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("DataCount"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n--ParityCount: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ParityCount"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nBucketName: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("BucketName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n--BucketID: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("BucketID"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n--Ctime: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Ctime"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n")])])]),s("ul",[s("li",[t._v("Bucket Information")])]),t._v(" "),s("p",[t._v("command description: If the BucketName exists, "),s("code",[t._v("head_bucket")]),t._v(" displays the creation time, redundancy strategy and redundancy parameters of this bucket; if it does not exist, returns the bucket does not exist.")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" mefs-user lfs head_bucket "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("BucketName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --addr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("public key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("Parameter explanation:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("BucketNameÔºöname of bucket\n--addr: user address, "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("which")]),t._v(" is empty by default, indicating that is the address of the "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("local")]),t._v(" node.\n")])])]),s("p",[t._v("result output:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("Method: Head Bucket\nBucketName: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("BucketName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n--BucketID: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("BucketID"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n--Ctime: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Ctime"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n--Policy: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Policy"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n--DataCount: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("DataCount"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n--ParityCount: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ParityCount"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("ul",[s("li",[t._v("Delete Bucket")])]),t._v(" "),s("p",[t._v("command description: if the bucket named exists, "),s("code",[t._v("delete_bucket")]),t._v(" deletes the bucket; if it does not exist, returns the bucket does not exist. Only delete when the bucket is empty, otherwise it returns that bucket is not empty.")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" mefs-user lfs delete_bucket "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("BucketName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --addr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("public key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("Parameter explanation:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("BucketNameÔºöname of bucket\n--addr: user address, "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("which")]),t._v(" is empty by default, indicating that is the address of the "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("local")]),t._v(" node.\n")])])]),s("p",[t._v("result output:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("Method: Delete Bucket\nBucketName: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("BucketName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n--BucketID: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("BucketID"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n--Ctime: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Ctime"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n--Policy: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Policy"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n--DataCount: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("DataCount"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n--ParityCount: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ParityCount"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[s("strong",[t._v("object operation")])]),t._v(" "),s("ul",[s("li",[t._v("upload object")])]),t._v(" "),s("p",[t._v("command description: "),s("code",[t._v("put_object")]),t._v(" uploads an object named ObjectName to the bucket named BucketName; if the bucket does not exist, it returns bucket does not exist; if the object already exists, it returns object already exists.")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" mefs-user lfs put_object "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ObjectName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("BucketName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --addr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("public key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("Parameter explanation:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("ObjectNameÔºöthe name of the uploaded file, using a relative or absolute path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nBucketNameÔºöname of bucket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n--addr: user address, "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("which")]),t._v(" is empty by default, indicating that is the address of the "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("local")]),t._v(" node.\n")])])]),s("p",[t._v("result output:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("Method: Put Object\nObjectName: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ObjectName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  // name of object\n--ObjectSize: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ObjectSize"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" // the size of the uploaded object\n--MD5: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("MD"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("5")]),t._v(">")]),t._v("               // the "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("hash")]),t._v(" value of the uploaded object by MD5 encryption\n--Ctime: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Ctime"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("           // create "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("time")]),t._v(" of object\n--Dir: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Dir"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("               // whether it is a directory, "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" indicates yes, "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" indicates no.\n--LatestChalTime:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("LatestChalTime"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  // the "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("time")]),t._v(" this object was last challenged\n")])])]),s("ul",[s("li",[t._v("download object")])]),t._v(" "),s("p",[t._v("command description: "),s("code",[t._v("get_object")]),t._v(" downloads an object named ObjectName from the bucket named BucketName; if the bucket does not exist, returns the bucket does not exist; if the object does not exist, returns the object does not exist.")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("mefs-user lfs get_object "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("BucketName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ObjectName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --o"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("OutputName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --addr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("public key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("Parameter explanation:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("ObjectNameÔºöname of object that want to get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nBucketNameÔºöname of bucket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n--o: the default name of  download object is ObjectName, "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" this parameter is set, it is OutputName.\n--addr: user address, "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("which")]),t._v(" is empty by default, indicating that is the address of the "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("local")]),t._v(" node.\n")])])]),s("p",[t._v("Result output:")]),t._v(" "),s("p",[t._v("Downloaded file")]),t._v(" "),s("ul",[s("li",[t._v("File List")])]),t._v(" "),s("p",[t._v("command description: "),s("code",[t._v("list_objects")]),t._v(" lists all the objects in the bucket named BucketName, including the object size, creation time, MD5 value, whether it is a directory, and the time of the most recent challenge.")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("mefs-user lfs list_objects "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("BucketName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --addr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("public key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("Parameter explanation:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("BucketNameÔºöname of bucket that want to listÔºõ\n--addr: user address, "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("which")]),t._v(" is empty by default, indicating that is the address of the "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("local")]),t._v(" node.\n")])])]),s("p",[t._v("Result output:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("Method: List Object\nObjectName: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ObjectName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n--ObjectSize: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ObjectSize"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n--MD5: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("MD"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("5")]),t._v(">")]),t._v("\n--Ctime: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Ctime"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n--Dir: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Dir"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n--LatestChalTime:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("LatestChalTime"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nObjectName: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ObjectName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n--ObjectSize: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ObjectSize"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n--MD5: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("MD"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("5")]),t._v(">")]),t._v("\n--Ctime: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Ctime"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n")])])]),s("ul",[s("li",[t._v("File Imformation")])]),t._v(" "),s("p",[t._v("command description: "),s("code",[t._v("head_object")]),t._v(" displays the size of the object named ObjectName in the bucket named BucketName, the MD5 value, the creation time, whether it is a directory, and the time of the most recent challenge.")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("mefs-user lfs head_object "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("BucketName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ObjectName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --addr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("public key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("Parameter explanation:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("ObjectNameÔºöname of object that want to "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("head")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nBucketNameÔºöname of bucket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n--addr: user address, "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("which")]),t._v(" is empty by default, indicating that is the address of the "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("local")]),t._v(" node.\n")])])]),s("p",[t._v("Result output:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("Method: Head Object\nObjectName: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ObjectName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n--ObjectSize: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ObjectSize"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n--MD5: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("MD"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("5")]),t._v(">")]),t._v("\n--Ctime: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Ctime"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n--Dir: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Dir"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n--LatestChalTime:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("LatestChalTime"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("ul",[s("li",[t._v("Delete File")])]),t._v(" "),s("p",[t._v("command description: "),s("code",[t._v("delete_object")]),t._v(" deletes the object named ObjectName from the bucket named BucketName.")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v(" mefs-user lfs delete_object "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("BucketName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ObjectName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --addr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("public key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("Parameter explanation:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("ObjectNameÔºöname of object to delete"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nBucketNameÔºöname of bucket that object is inÔºõ\n--addr: user address, "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("which")]),t._v(" is empty by default, indicating that is the address of the "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("local")]),t._v(" node.\n")])])]),s("p",[t._v("Result output:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("Method: Delete Object\nObjectName: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ObjectName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n--ObjectSize: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ObjectSize"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n--Ctime: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Ctime"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n--Dir: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Dir"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n--LatestChalTime:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("LatestChalTime"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[s("strong",[t._v("Operation about Role")])]),t._v(" "),s("ul",[s("li",[t._v("List the corresponding keeper")])]),t._v(" "),s("p",[t._v("Command description: "),s("code",[t._v("list_keepers")]),t._v(" lists the keeper who signed the UpKeeping contract with this user")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("mefs-user lfs list_keepers\n")])])]),s("p",[t._v("The output is the corresponding keeper id.")]),t._v(" "),s("ul",[s("li",[t._v("List the corresponding provider")])]),t._v(" "),s("p",[t._v("Command description: "),s("code",[t._v("list_providers")]),t._v(" lists providers that store data for this user.")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("mefs-user lfs list_providers\n")])])]),s("p",[t._v("The output is the corresponding provider id.")]),t._v(" "),s("p",[s("strong",[t._v("Others")])]),t._v(" "),s("ul",[s("li",[t._v("Refresh metadata")])]),t._v(" "),s("p",[t._v("Command description: "),s("code",[t._v("fsync")]),t._v(" manually refreshes the metadata of lfs. This command is executed on the keeper. Metadata includes SuperBlock, BucketInfo, ObjectInfo.")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("mefs-user lfs fsync\n")])])]),s("p",[t._v("The output is 'Flush Success'.")]),t._v(" "),s("ul",[s("li",[t._v("Check the storage space used")])]),t._v(" "),s("p",[t._v("Command description: "),s("code",[t._v("show_storage")]),t._v(" queries the user's used space, that is, how much data is stored in all buckets of the user, the unit is kb.")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("mefs-user lfs show_storage --addr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("public key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("Parameter explanation:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("--addr: user address, "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("which")]),t._v(" is empty by default, indicating that is the address of the "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("local")]),t._v(" node.\n")])])]),s("p",[t._v("The output is the corresponding space, the format is two decimal places with unit (kb).")]),t._v(" "),s("h4",{attrs:{id:"http-operation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http-operation"}},[t._v("#")]),t._v(" http Operation")]),t._v(" "),s("p",[t._v("Mefs commands can all be operated using http.")]),t._v(" "),s("p",[s("strong",[t._v("Configuration")])]),t._v(" "),s("p",[t._v("Before mefs-user starts, perform the following configuration:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("// mefs api port setting, default is "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5001")]),t._v("\nmefs-user config Addresses.API /ip4/0.0.0.0/tcp/5001\n// cross-domain access\nmefs-user config --json API.HTTPHeaders.Access-Control-Allow-Origin "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[\"*\"]'")]),t._v("\nmefs-user config --json API.HTTPHeaders.Access-Control-Allow-Methods "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'["PUT", "GET", "POST"]\'')]),t._v("\n")])])]),s("p",[t._v("Then restart mefs-user to use http to operate.")]),t._v(" "),s("p",[s("strong",[t._v("Usage")])]),t._v(" "),s("p",[t._v("A command similar to the following:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("mefs-user rootcmd subcmd "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("arg"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("1")]),t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("arg"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),t._v(" -opname1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("op"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("1")]),t._v(">")]),t._v(" -opname2"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("op"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),t._v("\n")])])]),s("p",[t._v("The corresponding http request is:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://<ip>:<port>/api/v0/api/v0/<rootcmd>/<subcmd>?arg=<arg1>&arg=<arg2>&opname1=<op1>&opname2=<op2>"')]),t._v("\n")])])]),s("p",[t._v("ip is the network address of the machine where mefs-user is started. The port defaults to 5001. If cross-domain access is configured before running, you can use the external network ip to access, otherwise you can only access it through 127.0.0.1.")]),t._v(" "),s("p",[s("strong",[t._v("example")])]),t._v(" "),s("ul",[s("li",[t._v("Show all bucket information")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://127.0.0.1:5001/api/v0/lfs/list_buckets?addr=<public key>"')]),t._v("\n")])])]),s("p",[t._v("The output is in standard json format:")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Method"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"List Buckets"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Buckets"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"BucketName"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<BucketName>"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"BucketID"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<BucketID>"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Ctime"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<Ctime>"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Policy"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<Policy>"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"DataCount"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<DataCount>"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ParityCount"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<ParityCount>"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"BucketName"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<BucketName>"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"BucketID"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<BucketID>"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Ctime"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<Ctime>"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Policy"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<Policy>"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"DataCount"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<DataCount>"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ParityCount"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<ParityCount>"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("Display information about all objects in a bucket")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://127.0.0.1:5001/api/v0/lfs/list_objects?arg=<BucketName>&addr=<public key>"')]),t._v("\n")])])]),s("p",[t._v("The output is in standard json format:")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Method"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"List Objects"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Objects"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ObjectName"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<ObjectName>"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ObjectSize"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<ObjectSize>"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Ctime"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<Ctime>"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Dir"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<Dir>"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"LatestChalTime"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<LatestChalTime>"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ObjectName"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<ObjectName>"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ObjectSize"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<ObjectSize>"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Ctime"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<Ctime>"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Dir"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<Dir>"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"LatestChalTime"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<LatestChalTime>"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"gateway-mode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gateway-mode"}},[t._v("#")]),t._v(" Gateway mode")]),t._v(" "),s("p",[t._v("Multiple users can share one mefs's running program.")]),t._v(" "),s("p",[s("strong",[t._v("user agent start")])]),t._v(" "),s("p",[t._v("After mefs is started, other users can also be started as a proxy.")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("mefs-user lfs start "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("addr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --sk"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("private key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --pwd"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("password"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("Parameter explanation:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("addrÔºöaccount address;\n--skÔºöthe private key of the user; if the private key corresponding to the address does not match, the address of the private key shall prevail;\n--pwdÔºöuser's password;\n")])])]),s("p",[s("strong",[t._v("user agent stop")])]),t._v(" "),s("p",[t._v("After mefs is started, other users can also be shut down by proxy.")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("mefs"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("user lfs kill addr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("pwd"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("password"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("Parameter explanation:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("addrÔºöaccount address\n--pwdÔºöaccount password\n")])])]),s("p",[s("strong",[t._v("Usage")])]),t._v(" "),s("ul",[s("li",[t._v("cli")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("mefs-user rootcmd subcmd arg1 "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("op1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("arg2 --addr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("public key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("ul",[s("li",[t._v("http")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://<ip>:5001/api/v0/api/v0/<roocmd>/<subcmd>?arg=<arg1>&op1=<arg2>&addr=<public key>"')]),t._v("\n")])])]),s("p",[s("strong",[t._v("example")])]),t._v(" "),s("p",[t._v("The user whose address is the public key obtains the file named ObjectName from the BucketName bucket.")]),t._v(" "),s("ul",[s("li",[t._v("cli")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("mefs lfs get_object "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("BucketName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ObjectName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --addr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("public key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("ul",[s("li",[t._v("http")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://127.0.0.1:5001/api/v0/lfs/get_object?arg=<BucketName>&arg=<ObjectName>&addr=<public key>"')]),t._v("\n")])])]),s("h3",{attrs:{id:"as-a-provider"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#as-a-provider"}},[t._v("#")]),t._v(" > As a provider")]),t._v(" "),s("h4",{attrs:{id:"start-up"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#start-up"}},[t._v("#")]),t._v(" Start up")]),t._v(" "),s("p",[s("strong",[t._v("initialization")])]),t._v(" "),s("p",[t._v("Mefs initialization, the default initialized directory is $HOME/.mefs, you can set the initialized directory by export MEFS_PATH="),s("local",{attrs:{dir:""}},[t._v(", and then run init.")])],1),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" mefs-provider init --netKey"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("net key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --sk"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("your private key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --pwd"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("your password"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --keyfile"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("absolute path of your keyfile"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("Parameter explanation:")]),t._v(" "),s("blockquote",[s("p",[t._v("skÔºöprivate key address;\npwdÔºöpassword;\nkeyfile: the full path of the keyfile file;\nnetKey: private network logo, now has dev and testnet; networks with the same logo can be interconnected.")])]),t._v(" "),s("p",[s("strong",[t._v("Modify the network transmission port")])]),t._v(" "),s("p",[t._v("The default is port 4001, if you need to change to "),s("port",{attrs:{num:""}},[t._v(", execute the following command;\nThe provider requires that this "),s("port",{attrs:{num:""}},[t._v(" can be directly accessed, or there is a port mapping on the external network machine.")])],1)],1),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("// execute before running daemon\nmefs-provider config --json Addresses.Swarm "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"['),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("/ip4/0.0.0.0/tcp/<port num>"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(']"')]),t._v("\n")])])]),s("p",[t._v("For example, change to port 4090:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("// execute before running daemon\nmefs-provider config --json Addresses.Swarm "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"['),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("/ip4/0.0.0.0/tcp/4090"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(']"')]),t._v("\n")])])]),s("p",[s("strong",[t._v("Start instance")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" mefs-provider daemon --netKey"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("net key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --pwd"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("your password"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --dur"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("your storage duration"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --cap"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("your storage capacity"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --price"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("your storage price"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --deCap"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("your deposit capacity"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --rdo"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("bool"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --pos"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true\n")])])]),s("p",[t._v("Parameter explanation:")]),t._v(" "),s("blockquote",[s("p",[t._v("dur: the length of storage time provided; calculated in days, the default is 365 days;\ncapÔºöthe size of the storage space provided; calculated in MB, the default is 1TB;\nprice: the storage price provided is calculated in wei, and the default is 4 * 10^9 wei; that is, 3 USD/(TB*month);\nrdoÔºöwhether to redeploy the offer contract, the default is false;\ndeCapÔºöstaking space; calculated in MB, 1TB by default;\nposÔºöwhether to use the cold start function, the default is false and not turned on; if you use it, you need to ensure that the available space is greater than the pledged space;\nnetKey: private network logo, now there are dev and testnet; networks with the same logo can be interconnected;")])]),t._v(" "),s("h4",{attrs:{id:"view-node-information"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#view-node-information"}},[t._v("#")]),t._v(" View node information")]),t._v(" "),s("p",[t._v("Through "),s("code",[t._v("mefs-provider id")]),t._v(", you can view the node's network address (8M...), account address (0x...), public key, communication address, and version information.")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("mefs-provider "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("peerID"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --pwd"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("your password"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("Parameter explanation:")]),t._v(" "),s("blockquote",[s("p",[t._v("peerIDÔºöthe ID of the node to be searched; the default is the local node;\npwdÔºöthe password of the node is DefaultPassword by default, and the proxy node is empty by default;")])]),t._v(" "),s("p",[t._v("Result output:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"NetworkAddr"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"8MJ5cAWfAP86cHmAcC3dxqzK41dh4a"')]),t._v(",\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"AccountAddr"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0x91b90d08aaE86F87648cF6B497918D487A5C19Ef"')]),t._v(",\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PublicKey"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A6nefy7/FZbrrszX/itXdKmNTrFmkwMSYptFYwBjRVxz"')]),t._v(",\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Addresses"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/ip4/127.0.0.1/tcp/4001/p2p/8MJ5cAWfAP86cHmAcC3dxqzK41dh4a"')]),t._v(",\n\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/ip4/172.26.133.70/tcp/4001/p2p/8MJ5cAWfAP86cHmAcC3dxqzK41dh4a"')]),t._v(",\n\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/ip4/172.17.0.1/tcp/4001/p2p/8MJ5cAWfAP86cHmAcC3dxqzK41dh4a"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"AgentVersion"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"go-mefs/v0.3.2/ddf22678"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"display-information"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#display-information"}},[t._v("#")]),t._v(" Display information")]),t._v(" "),s("p",[s("strong",[t._v("Local node information")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("mefs-provider info self\n")])])]),s("p",[t._v("Output result:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Wallet"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0xa12626B388dc08481520B0f9c7009b9505f87f5e"')]),t._v(", //account address\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"StartTime"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2020-11-16 Mon 10:24:50 CST"')]),t._v(", //registration "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("time")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UpTime"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"45 day 7 hour 42 minute 10 second"')]),t._v(", //online "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("time")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ReadyForService"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" true, //whether the "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" has been started\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PublicNetwork"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/ip4/58.210.46.6/tcp/4115/p2p/8MJJ58XHucLXfV5ej7GUXWhRDAHfim"')]),t._v(", //public address\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PublicReachable"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" true,\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Balance"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10874.62 Token"')]),t._v(",\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PledgeBytes"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.00 TiB"')]),t._v(",\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UsedBytes"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"639.31 GiB"')]),t._v(",\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PosBytes"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0 B"')]),t._v(",\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"LocalFreeBytes"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"232.77 GiB"')]),t._v(",\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OfferAddress"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0x8bc53304465Aa7214Baaf4407f6d4626E15bBab0"')]),t._v(",\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OfferCapacity"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"976.56 GiB"')]),t._v(",\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OfferPrice"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3.02 Dollar/(TiB*Month) (For now, 1 Dollar = 100 Token)"')]),t._v(",\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OfferDuration"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"8640000 day"')]),t._v(",\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OfferStartTime"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2020-05-15 Fri 04:38:38 CST"')]),t._v(",\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"TotalIncome"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2.14 Token"')]),t._v(",\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"StorageIncome"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.51 Token"')]),t._v(",\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DownloadIncome"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"7498443.30 Gwei"')]),t._v(",\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PosIncome"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"624882551.42 Gwei"')]),t._v("\n")])])]),s("p",[s("strong",[t._v("user information")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("mefs-provider info "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("users")]),t._v("\n")])])]),s("p",[t._v("Output result:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("8MJg6VvVqYPFr2d38wxUVGRZqqJcnv/8MGXdiJq3AhHuQa3dh1pucP6rJXahb\n8MKWbYg3b9Gxj2c7szWkzSxAJS3V6y/8MHLoGHF2rBXPocBztUu2tAEaiqYqb\n8MJr4bwoDcsGVdD7hhAJYMs8FkN3Kt/8MKACLbaSreLC2e7nkfEjPZvbeLhzk\n8MKDyauiihGANvuAxc5G3N6B922rFy/8MKbFLenGA3zbNmKiZvkWaoztGLvJu\n")])])]),s("p",[t._v("The first ID represents the User with whom the Provider node signs a storage service contract, and the first represents the file system ID.")]),t._v(" "),s("p",[s("strong",[t._v("group information")])]),t._v(" "),s("p",[t._v("Provider provides storage services for users to form a group. The group information contains detailed information about storage services.")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("mefs-provider info group "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("uid"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("qid"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("Parameter explanation:")]),t._v(" "),s("blockquote",[s("p",[t._v("uidÔºöID of the user;\nqidÔºöID of the file system;")])]),t._v(" "),s("h4",{attrs:{id:"view-network-nodes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#view-network-nodes"}},[t._v("#")]),t._v(" View network nodes")]),t._v(" "),s("p",[s("strong",[t._v("View Keeper nodes in the network")])]),t._v(" "),s("p",[t._v("Show all the Keeper account addresses registered on the chain:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("mefs-provider list keepers\n")])])]),s("p",[t._v("Output result:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"KeeperCount"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(",\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PledgeMoney"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"30000000.00 Gwei"')]),t._v(", //keeper pledge total amount\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OnlineCount"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(", //number of online keepers\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OnlineKepepers"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" //Keeper online\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Address"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0x489799F06C6E70599e1Cc34d393394D59Cca1695"')]),t._v(",//account address\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Online"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" true,\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PledgeMoney"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10000000.00 Gwei"')]),t._v(", //pledge amount\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PledgeTime"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2020-09-28 Mon 13:01:29 CST"')]),t._v(" //Pledge "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("time")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Address"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0xdB04F60f4313fdCb75C51679ad25dE5D5e92a45B"')]),t._v(",\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Online"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" true,\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PledgeMoney"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10000000.00 Gwei"')]),t._v(",\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PledgeTime"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2020-09-28 Mon 13:05:10 CST"')]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OfflineCount"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(", //Keeper not online\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OfflineKeepers"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Address"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0x91b90d08aaE86F87648cF6B497918D487A5C19Ef"')]),t._v(",\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Online"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" false,\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PledgeMoney"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10000000.00 Gwei"')]),t._v(",\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PledgeTime"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2020-09-28 Mon 12:54:27 CST"')]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("p",[s("strong",[t._v("View Provider nodes in the network")])]),t._v(" "),s("p",[t._v("Show all Provider account addresses registered on the chain:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("mefs-provider list providers\n")])])]),s("h3",{attrs:{id:"as-a-keeper"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#as-a-keeper"}},[t._v("#")]),t._v(" > As a keeper")]),t._v(" "),s("h4",{attrs:{id:"start-up-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#start-up-2"}},[t._v("#")]),t._v(" Start up")]),t._v(" "),s("p",[s("strong",[t._v("initialization")])]),t._v(" "),s("p",[t._v("Mefs initialization, the default initialized directory is $HOME/.mefs, you can set the initialized directory by export MEFS_PATH="),s("local",{attrs:{dir:""}},[t._v(", and then run init.")])],1),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" mefs-keeper init --netKey"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("net key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --sk"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("your private key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --pwd"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("your password"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --keyfile"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("absolute path of your keyfile"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("Parameter explanation:")]),t._v(" "),s("ul",[s("li",[t._v("skÔºöprivate key address, if not specified, a new account will be created by default;")]),t._v(" "),s("li",[t._v("pwdÔºöpassword, the default password if not specified;")]),t._v(" "),s("li",[t._v("keyfile: the full path of the keyfile file, if it is not specified, the default is to create a new keyfile;")]),t._v(" "),s("li",[t._v("netKey: private network logo, now has dev and testnet; networks with the same logo can be interconnected, the default is dev.")])]),t._v(" "),s("p",[s("strong",[t._v("Modify the network transmission port")])]),t._v(" "),s("p",[t._v("The default is port 4001, if you need to change to "),s("port",{attrs:{num:""}},[t._v(", execute the following command;\nKeeper requires that this "),s("port",{attrs:{num:""}},[t._v(" can be directly accessed, or there is a port mapping on the external network machine.")])],1)],1),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("// Execute before running daemon\nmefs-keeper config --json Addresses.Swarm "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"['),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("/ip4/0.0.0.0/tcp/<port num>"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(']"')]),t._v("\n")])])]),s("p",[t._v("For example, change to port 4090:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("// Execute before running daemon\nmefs-keeper config --json Addresses.Swarm "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"['),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("/ip4/0.0.0.0/tcp/4090"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(']"')]),t._v("\n")])])]),s("p",[s("strong",[t._v("Start instance")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" mefs-keeper daemon --netKey"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("net key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --pwd"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("your password"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --sk"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("your secretKey"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("Parameter explanation:")]),t._v(" "),s("ul",[s("li",[t._v("netKey: private network logo, now there are dev and testnet; networks with the same logo can be interconnected, the default is dev;")]),t._v(" "),s("li",[t._v("pwdÔºöpassword, the default password if not specified;")]),t._v(" "),s("li",[t._v("skÔºöprivate key address, if not specified, it will be exported from the local private key file by default;")])]),t._v(" "),s("h4",{attrs:{id:"view-node-information-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#view-node-information-2"}},[t._v("#")]),t._v(" View node information")]),t._v(" "),s("p",[t._v("Through "),s("code",[t._v("mefs-keeper id")]),t._v(", you can view the node's network address (8M...), account address (0x...), public key, communication address, and version information.")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("mefs-keeper "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("peerID"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --pwd"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("your password"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("Parameter explanation:")]),t._v(" "),s("blockquote",[s("p",[t._v("peerIDÔºöthe ID of the node to be searched; the default is the local node;\npwdÔºöthe password of the node is DefaultPassword by default, and the proxy node is empty by default;")])]),t._v(" "),s("p",[t._v("Result output:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"NetworkAddr"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"8MJ5cAWfAP86cHmAcC3dxqzK41dh4a"')]),t._v(",\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"AccountAddr"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0x91b90d08aaE86F87648cF6B497918D487A5C19Ef"')]),t._v(",\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PublicKey"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A6nefy7/FZbrrszX/itXdKmNTrFmkwMSYptFYwBjRVxz"')]),t._v(",\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Addresses"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/ip4/127.0.0.1/tcp/4001/p2p/8MJ5cAWfAP86cHmAcC3dxqzK41dh4a"')]),t._v(",\n\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/ip4/172.26.133.70/tcp/4001/p2p/8MJ5cAWfAP86cHmAcC3dxqzK41dh4a"')]),t._v(",\n\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/ip4/172.17.0.1/tcp/4001/p2p/8MJ5cAWfAP86cHmAcC3dxqzK41dh4a"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"AgentVersion"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"go-mefs/v0.3.2/ddf22678"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"display-information-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#display-information-2"}},[t._v("#")]),t._v(" Display information")]),t._v(" "),s("p",[t._v("Use "),s("code",[t._v("mefs-keeper info")]),t._v(" to display information related to the keeper node.")]),t._v(" "),s("p",[s("strong",[t._v("Show revenue")])]),t._v(" "),s("p",[t._v("mefs-keeper gains revenue by providing management services.")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("mefs-keeper info list_income\n")])])]),s("p",[t._v("Output result:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("manageIncome: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("88155981.17")]),t._v(" Gwei\nposIncome: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" Wei\n")])])]),s("p",[t._v("manageIncome represents the income obtained through the management service, and posIncome represents the income obtained through the cold start management service.")]),t._v(" "),s("p",[s("strong",[t._v("Show other node addresses")])]),t._v(" "),s("p",[t._v("In a storage service, the keeper signs a storage service contract with the user and the provider to jointly serve the user. The following commands can be used to query which users the keeper has signed a storage service contract with.")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("mefs-keeper info list_users\n")])])]),s("p",[t._v("Output result:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("8MJacEyv1Pf92d9k93uquFzPcnG5rH.fsID:8MG8vi4NGKmdrz3EuxAgrPatAk5LJ1 has keepers:8MH4Woxb2FkM5nFr86dHj21fLgEybi/8MJ5cAWfAP86cHmAcC3dxqzK41dh4a/8MK6qHvAfayLQy4d2684NTLAVLpQFk\n8MJacEyv1Pf92d9k93uquFzPcnG5rH.fsID:8MG8vi4NGKmdrz3EuxAgrPatAk5LJ1 has providers:8MJJ58XHucLXfV5ej7GUXWhRDAHfim/8MGvZx9fireJe3McVXatDrim2CmNHJ/8MHdtmAtx5Q54So9MRWSSELorrZJdx/8MGXm9jEhY2JHAdpfbmbS4agqsJ2yM/8MKLYiSAFsdVxfj1PYNCQQjoG5Nwgm/8MH9yV7GZXhjYZeydVvZgEF3U7kxhN\n")])])]),s("p",[t._v("This result shows that the keeper node and the user node (the network address is 8MJacEyv1Pf92d9k93uquFzPcnG5rH) have signed a storage service contract. 8MG8vi4NGKmdrz3EuxAgrPatAk5LJ1 represents the file system ID, which represents the storage service and is converted from the query contract address.")]),t._v(" "),s("p",[t._v("View the addresses of other keeper accounts that have signed a storage contract with the keeper node:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("mefs-keeper info list_keepers\n")])])]),s("p",[t._v("View the address of other provider accounts that have signed a storage contract with the keeper node:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("mefs-keeper info list_providers\n")])])]),s("h4",{attrs:{id:"view-network-nodes-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#view-network-nodes-2"}},[t._v("#")]),t._v(" View network nodes")]),t._v(" "),s("h5",{attrs:{id:"view-keeper-nodes-in-the-network"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#view-keeper-nodes-in-the-network"}},[t._v("#")]),t._v(" View Keeper nodes in the network")]),t._v(" "),s("p",[t._v("Show all the Keeper account addresses registered on the chain:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("mefs-keeper list keepers\n")])])]),s("p",[t._v("Output result:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"KeeperCount"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(",\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PledgeMoney"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"30000000.00 Gwei"')]),t._v(", //keeper pledge total amount\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OnlineCount"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(",//number of online keepers\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OnlineKepepers"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" //keeper online\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Address"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0x489799F06C6E70599e1Cc34d393394D59Cca1695"')]),t._v(",//account address\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Online"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" true,\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PledgeMoney"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10000000.00 Gwei"')]),t._v(",//pledge amount\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PledgeTime"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2020-09-28 Mon 13:01:29 CST"')]),t._v("//pledge "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("time")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Address"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0xdB04F60f4313fdCb75C51679ad25dE5D5e92a45B"')]),t._v(",\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Online"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" true,\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PledgeMoney"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10000000.00 Gwei"')]),t._v(",\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PledgeTime"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2020-09-28 Mon 13:05:10 CST"')]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OfflineCount"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(", //keeper not online\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OfflineKeepers"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Address"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0x91b90d08aaE86F87648cF6B497918D487A5C19Ef"')]),t._v(",\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Online"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" false,\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PledgeMoney"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10000000.00 Gwei"')]),t._v(",\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PledgeTime"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2020-09-28 Mon 12:54:27 CST"')]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("h5",{attrs:{id:"view-provider-nodes-in-the-network"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#view-provider-nodes-in-the-network"}},[t._v("#")]),t._v(" View Provider nodes in the network")]),t._v(" "),s("p",[t._v("Show all Provider's account addresses registered on the chain:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("mefs-keeper list providers\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);