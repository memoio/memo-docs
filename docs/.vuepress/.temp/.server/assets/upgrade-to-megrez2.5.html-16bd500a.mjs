import { ssrRenderAttrs, ssrRenderAttr } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper-cc2b3d55.mjs";
const _imports_0 = "/assets/to2.5-1-418846c0.png";
const _imports_1 = "/assets/to2.5-2-70d014fb.png";
const _imports_2 = "/assets/to2.5-3-2c551542.png";
const _imports_3 = "/assets/to2.5-4-18ae09c9.png";
const _imports_4 = "/assets/to2.5-5-32531e92.png";
const _imports_5 = "/assets/to2.5-6-48f5e04a.png";
const _imports_6 = "/assets/to2.5-7-786ba835.png";
const _imports_7 = "/assets/to2.5-8-48df5a2d.png";
const _imports_8 = "/assets/to2.5-9-6377da09.png";
const _imports_9 = "/assets/to2.5-10-918c8b16.png";
const _imports_10 = "/assets/to2.5-11-94cd0d76.png";
const _imports_11 = "/assets/to2.5-12-93e1118c.png";
const _imports_12 = "/assets/to2.5-13-5fa3673c.png";
const _imports_13 = "/assets/to2.5-14-1af5ad34.png";
const _sfc_main = {};
function _sfc_ssrRender(_ctx, _push, _parent, _attrs) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="step-by-step" tabindex="-1"><a class="header-anchor" href="#step-by-step" aria-hidden="true">#</a> Step by step</h1><p>Using user node as an example, providers are the same.</p><h2 id="note" tabindex="-1"><a class="header-anchor" href="#note" aria-hidden="true">#</a> Note</h2><p>For user nodes, if there is important data stored in memo, please download it to the local hard disk first, otherwise the data will be lost.</p><h2 id="step1-for-existing-nodes" tabindex="-1"><a class="header-anchor" href="#step1-for-existing-nodes" aria-hidden="true">#</a> Step1(For existing nodes)</h2><p>1.Enter the node</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> mefs-user <span class="token function">bash</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>​<img${ssrRenderAttr("src", _imports_0)} alt="1" loading="lazy"></p><p>2.Export the node sk and wallet address and save it</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mefs-user wallet default
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>​<img${ssrRenderAttr("src", _imports_1)} alt="2" loading="lazy"></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mefs-user wallet <span class="token builtin class-name">export</span> 0xf830Eb3445E4c5dAf415f3284c8C50ff6670b3f0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>​<img${ssrRenderAttr("src", _imports_2)} alt="3" loading="lazy"></p><p>3.stop the node and delete the node root directory, the default is .memo-user</p><p>​<img${ssrRenderAttr("src", _imports_3)} alt="4" loading="lazy"></p><h2 id="step2-for-new-nodes" tabindex="-1"><a class="header-anchor" href="#step2-for-new-nodes" aria-hidden="true">#</a> Step2(For new nodes)</h2><p>1.Send the wallet address to us for topping up</p><p>2.Download the latest version of image</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull memoio/mefs-user:latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>​<img${ssrRenderAttr("src", _imports_4)} alt="5" loading="lazy"></p><p>Set up the environments for root directory and data directory</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">MEFS_PATH</span><span class="token operator">=~</span>/memo_user

<span class="token assign-left variable">MEFS_DATA</span><span class="token operator">=~</span>/memo_user_data
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img${ssrRenderAttr("src", _imports_5)} alt="6" tabindex="0" loading="lazy"><figcaption>6</figcaption></figure><p>3.Regenerate the node root directory using sk</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">--rm</span> <span class="token parameter variable">-v</span> <span class="token variable">$MEFS_PATH</span>:/root <span class="token parameter variable">--entrypoint</span> mefs-user memoio/mefs-user:latest init <span class="token parameter variable">--sk</span><span class="token operator">=</span> da3d7cab393218e5d4e3835f6651d815e0df46bb3c8d843fef23cc80c66a16ad <span class="token parameter variable">--password</span><span class="token operator">=</span>memoriae
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>​<img${ssrRenderAttr("src", _imports_6)} alt="7" loading="lazy"></p><p>4.Update the configuration file</p><p>version:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">--rm</span> <span class="token parameter variable">-v</span> <span class="token variable">$MEFS_PATH</span>:/root <span class="token parameter variable">--entrypoint</span> mefs-user memoio/mefs-user:latest config <span class="token builtin class-name">set</span> <span class="token parameter variable">--key</span><span class="token operator">=</span>contract.version <span class="token parameter variable">--value</span><span class="token operator">=</span><span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>​<img${ssrRenderAttr("src", _imports_7)} alt="8" loading="lazy"></p><p>endpoint:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">--rm</span> <span class="token parameter variable">-v</span> <span class="token variable">$MEFS_PATH</span>:/root <span class="token parameter variable">--entrypoint</span> mefs-user memoio/mefs-user:latest config <span class="token builtin class-name">set</span> <span class="token parameter variable">--key</span><span class="token operator">=</span>contract.endPoint <span class="token parameter variable">--value</span><span class="token operator">=</span><span class="token string">&quot;https:// testchain.metamemo.one:24180&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>​<img${ssrRenderAttr("src", _imports_8)} alt="9" loading="lazy"></p><p>contract:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">--rm</span> <span class="token parameter variable">-v</span> <span class="token variable">$MEFS_PATH</span>:/root <span class="token parameter variable">--entrypoint</span> mefs-user memoio/mefs-user:latest config <span class="token builtin class-name">set</span> <span class="token parameter variable">--key</span><span class="token operator">=</span>contract.roleContract <span class="token parameter variable">--value</span><span class="token operator">=</span><span class="token string">&quot; 0x7c797a5d4809e3FA59d4988b6EeB8880D83Eef3a&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>​<img${ssrRenderAttr("src", _imports_9)} alt="10" loading="lazy"></p><p>bootstrap:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">--rm</span> <span class="token parameter variable">-v</span> <span class="token variable">$MEFS_PATH</span>:/root <span class="token parameter variable">--entrypoint</span> mefs-user memoio/mefs-user:latest bootstrap <span class="token function">clear</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img${ssrRenderAttr("src", _imports_10)} alt="11" tabindex="0" loading="lazy"><figcaption>11</figcaption></figure><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">--rm</span> <span class="token parameter variable">-v</span> <span class="token variable">$MEFS_PATH</span>:/root <span class="token parameter variable">--entrypoint</span> mefs-user memoio/mefs-user:latest bootstrap <span class="token function">add</span>

<span class="token string">&quot;/ip4/1.182.90.4/tcp/14071/p2p/12D3KooWRJ4Hs5oKEonaz2B5j2DVFTa4j66oHfzndVLCmYhkWY2w&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>5.Start the node</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-d</span> --stop-timeout <span class="token number">30</span> <span class="token parameter variable">-v</span> <span class="token variable">$MEFS_PATH</span>:/root <span class="token parameter variable">-v</span> <span class="token variable">$MEFS_DATA</span>:/root/data <span class="token parameter variable">-e</span> <span class="token assign-left variable">PRICE</span><span class="token operator">=</span><span class="token number">250000</span> <span class="token parameter variable">-e</span> <span class="token assign-left variable">PASSWORD</span><span class="token operator">=</span><span class="token string">&quot;memoriae&quot;</span> <span class="token parameter variable">-e</span> <span class="token assign-left variable">GROUP</span><span class="token operator">=</span><span class="token number">2</span> <span class="token parameter variable">-e</span> <span class="token assign-left variable">SWARM_PORT</span><span class="token operator">=</span><span class="token number">4001</span> <span class="token parameter variable">-e</span> <span class="token assign-left variable">DATA_PATH</span><span class="token operator">=</span>/root/data <span class="token parameter variable">--name</span> mefs-user memoio/mefs-user:latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img${ssrRenderAttr("src", _imports_11)} alt="12" tabindex="0" loading="lazy"><figcaption>12</figcaption></figure><p>6.Wait for the synchronization til the status turns true</p><figure><img${ssrRenderAttr("src", _imports_12)} alt="13" tabindex="0" loading="lazy"><figcaption>13</figcaption></figure><h2 id="step-3-for-providers-only" tabindex="-1"><a class="header-anchor" href="#step-3-for-providers-only" aria-hidden="true">#</a> Step 3: (For providers only)</h2><p>1.declare</p><p>When participating as a provider node, you need to run the declare command (declare the public address), which is used to communicate between nodes.</p><p>Prepare your public ip + port, the demonstration is as below.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mefs-provider net <span class="token builtin class-name">declare</span> /ip4/x.x.x.x/tcp/4001
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img${ssrRenderAttr("src", _imports_13)} alt="14" tabindex="0" loading="lazy"><figcaption>14</figcaption></figure><p>Explanation of parameters.</p><p>suppose 1.2.3.4 is your public ip</p><p>4001 is your public port, which corresponds to the port 4001 mapped when the node is started.</p></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("../pages/version-update-description/upgrade-to-megrez2.5.html.vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const upgradeToMegrez2_5_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender], ["__file", "upgrade-to-megrez2.5.html.vue"]]);
export {
  upgradeToMegrez2_5_html as default
};
