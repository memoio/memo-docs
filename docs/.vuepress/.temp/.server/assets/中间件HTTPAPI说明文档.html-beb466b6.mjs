import { resolveComponent, useSSRContext } from "vue";
import { ssrRenderAttrs, ssrRenderComponent, ssrRenderAttr } from "vue/server-renderer";
import { _ as _export_sfc } from "./plugin-vue_export-helper-cc2b3d55.mjs";
const _imports_0 = "/assets/getnonce-01f01c2b.png";
const _imports_1 = "/assets/login-6da5567d.png";
const _imports_2 = "/assets/fresh-5239cd39.png";
const _imports_3 = "/assets/put1-579a0872.png";
const _imports_4 = "/assets/put2-34faa82b.png";
const _imports_5 = "/assets/get1png-4dd6a382.png";
const _imports_6 = "/assets/get2-6fac3842.png";
const _imports_7 = "/assets/list-51e86e69.png";
const _imports_8 = "/assets/balance-c9424eec.png";
const _imports_9 = "/assets/storage-b9785a92.png";
const _sfc_main = {};
function _sfc_ssrRender(_ctx, _push, _parent, _attrs) {
  const _component_ExternalLinkIcon = resolveComponent("ExternalLinkIcon");
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="中间件httpapi说明文档" tabindex="-1"><a class="header-anchor" href="#中间件httpapi说明文档" aria-hidden="true">#</a> 中间件HTTPAPI说明文档</h1><p>启动中间件服务，默认监听端口为8080； 本文档所使用的例子中，http监听端口设为8081，baseURL为<a href="http://localhost:8081" target="_blank" rel="noopener noreferrer">http://localhost:8081`);
  _push(ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
  _push(`</a>；以下所有请求URL应根据实际情况进行更改。</p><h2 id="_1-登陆验证" tabindex="-1"><a class="header-anchor" href="#_1-登陆验证" aria-hidden="true">#</a> 1. 登陆验证</h2><h3 id="_1-1-获取nonce" tabindex="-1"><a class="header-anchor" href="#_1-1-获取nonce" aria-hidden="true">#</a> 1.1 获取nonce</h3><p>先获取登录所需的<code>nonce</code>值。</p><p>请求URL：<a href="http://localhost:8081/getnonce" target="_blank" rel="noopener noreferrer">http://localhost:8081/getnonce`);
  _push(ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
  _push(`</a></p><p>请求方式：GET</p><p>返回参数：nonce值（16进制字符串表示）</p><p>请求示例：</p><figure><img${ssrRenderAttr("src", _imports_0)} alt="getnonce" tabindex="0" loading="lazy"><figcaption>getnonce</figcaption></figure><p>错误码：无错误码</p><h3 id="_1-2-登录请求" tabindex="-1"><a class="header-anchor" href="#_1-2-登录请求" aria-hidden="true">#</a> 1.2 登录请求</h3><p>nonce的有效期为30秒，第一步获取nonce后需要在有效期内发送登录请求。</p><p>请求URL：<a href="http://localhost:8081/login" target="_blank" rel="noopener noreferrer">http://localhost:8081/login`);
  _push(ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
  _push(`</a></p><p>请求方式：POST</p><p>请求参数（JSON格式）：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;address&quot;</span><span class="token operator">:</span><span class="token string">&quot;0xE7E9f12f99aD17d4786b9B1247C097e63ceaF8Db&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;nonce&quot;</span><span class="token operator">:</span><span class="token string">&quot;f1e89cbb3ee2981878d9410fec7ac68b6640a3c98e00170bb97c400edbfa11c6&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;domain&quot;</span><span class="token operator">:</span><span class="token string">&quot;memo.io&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;signature&quot;</span><span class="token operator">:</span><span class="token string">&quot;0x...&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>参数名</th><th>变量</th><th>类型【长度限制】</th><th>必填</th><th>描述</th></tr></thead><tbody><tr><td>address</td><td>登陆账户地址</td><td>string</td><td>是</td><td>以太坊账户地址</td></tr><tr><td>nonce</td><td>随机值</td><td>string</td><td>是</td><td>getnonce获取的随机值</td></tr><tr><td>domain</td><td>有效域</td><td>string</td><td>是</td><td>有效的作用域，“<a href="http://memo.io" target="_blank" rel="noopener noreferrer">memo.io`);
  _push(ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
  _push(`</a>”</td></tr><tr><td>signature</td><td>签名</td><td>string</td><td>是</td><td>sign(hash(address, nonce, domain))</td></tr></tbody></table><p>获取签名信息的方式如下述代码所示：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;flag&quot;</span>
    <span class="token string">&quot;fmt&quot;</span>
    <span class="token string">&quot;log&quot;</span>

    <span class="token string">&quot;github.com/ethereum/go-ethereum/common/hexutil&quot;</span>
    <span class="token string">&quot;github.com/ethereum/go-ethereum/crypto&quot;</span>
<span class="token punctuation">)</span>

<span class="token comment">// 对 address、nonce、domain进行签名</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    domain <span class="token operator">:=</span> <span class="token string">&quot;memo.io&quot;</span>
    address <span class="token operator">:=</span> flag<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;address&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;0xE7E9f12f99aD17d4786b9B1247C097e63ceaF8Db&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;the login address&quot;</span><span class="token punctuation">)</span>
    nonce <span class="token operator">:=</span> flag<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;nonce&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;f1e89cbb3ee2981878d9410fec7ac68b6640a3c98e00170bb97c400edbfa11c6&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;the login nonce&quot;</span><span class="token punctuation">)</span>
    secretKey <span class="token operator">:=</span> flag<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;sk&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;the sk to signature&quot;</span><span class="token punctuation">)</span> <span class="token comment">// 账户address的私钥</span>

    flag<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    hash <span class="token operator">:=</span> crypto<span class="token punctuation">.</span><span class="token function">Keccak256</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token operator">*</span>address<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token operator">*</span>nonce<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>domain<span class="token punctuation">)</span><span class="token punctuation">)</span>
    sk<span class="token punctuation">,</span> err <span class="token operator">:=</span> crypto<span class="token punctuation">.</span><span class="token function">HexToECDSA</span><span class="token punctuation">(</span><span class="token operator">*</span>secretKey<span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    signature<span class="token punctuation">,</span> err <span class="token operator">:=</span> crypto<span class="token punctuation">.</span><span class="token function">Sign</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> sk<span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    sig <span class="token operator">:=</span> hexutil<span class="token punctuation">.</span><span class="token function">Encode</span><span class="token punctuation">(</span>signature<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>sig<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>返回参数（JSON）：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;access token&quot;</span><span class="token operator">:</span> <span class="token string">&quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoxLCJhdWQiOiJtZW1vLmlvIiwiZXhwIjoxNjc3NDkwMTgyLCJpYXQiOjE2Nzc0ODkyODIsImlzcyI6Im1lbW8uaW8iLCJzdWIiOiIweEU3RTlmMTJmOTlhRDE3ZDQ3ODZiOUIxMjQ3QzA5N2U2M2NlYUY4RGIifQ.F0asDvu3LH3ccK6LAztBGF1TTzGw7Stc9gBEzVicuE4&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;fresh token&quot;</span><span class="token operator">:</span> <span class="token string">&quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoyLCJhdWQiOiJtZW1vLmlvIiwiZXhwIjoxNjc4MDk0MDgyLCJpYXQiOjE2Nzc0ODkyODIsImlzcyI6Im1lbW8uaW8iLCJzdWIiOiIweEU3RTlmMTJmOTlhRDE3ZDQ3ODZiOUIxMjQ3QzA5N2U2M2NlYUY4RGIifQ.PDxQ2orOlsES6fvkyR-xWc6M1yBY8RiFTcn8m5AGROc&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>参数名</th><th>变量</th><th>类型【长度限制】</th><th>必填</th><th>描述</th></tr></thead><tbody><tr><td>access token</td><td>认证令牌</td><td>string</td><td>是</td><td>15分钟内，持有该令牌可以免密认证</td></tr><tr><td>fresh token</td><td>刷新令牌</td><td>string</td><td>是</td><td>7天内，持有该令牌可以重新生成认证令牌</td></tr></tbody></table><p>请求示例：</p><figure><img${ssrRenderAttr("src", _imports_1)} alt="login" tabindex="0" loading="lazy"><figcaption>login</figcaption></figure><p>错误码：</p><table><thead><tr><th>HTTP状态码</th><th>错误码</th><th>错误描述</th></tr></thead><tbody><tr><td>500</td><td>InternalError</td><td>We encountered an internal error, please try again.</td></tr><tr><td>401</td><td>Authentication</td><td>There is an empty parameter; Got wrong domain; Got wrong nonce; Got wrong address; Got wrong signature</td></tr></tbody></table><h3 id="_1-3-刷新accesstoken" tabindex="-1"><a class="header-anchor" href="#_1-3-刷新accesstoken" aria-hidden="true">#</a> 1.3 刷新accessToken</h3><p>accessToken的有效期为15分钟；freshToken的有效期为7天，当accesToken过期后，需要根据freshToken刷新accessToken进行免密认证登录。</p><p>请求URL：<a href="http://localhost:8081/fresh" target="_blank" rel="noopener noreferrer">http://localhost:8081/fresh`);
  _push(ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
  _push(`</a></p><p>请求方式：GET</p><p>请求头信息：</p><table><thead><tr><th>参数名</th><th>变量</th><th>类型</th><th>必填</th><th>描述</th></tr></thead><tbody><tr><td>Authorization</td><td>刷新令牌</td><td>string</td><td>是</td><td>上述登录请求返回的freshToken</td></tr></tbody></table><p>返回参数（JSON）：</p><table><thead><tr><th>参数名</th><th>变量</th><th>类型【长度限制】</th><th>描述</th></tr></thead><tbody><tr><td>access token</td><td>认证令牌</td><td>string</td><td>有效期过后重新生成的认证令牌</td></tr></tbody></table><p>请求示例：</p><figure><img${ssrRenderAttr("src", _imports_2)} alt="fresh" tabindex="0" loading="lazy"><figcaption>fresh</figcaption></figure><p>错误码:</p><table><thead><tr><th>HTTP状态码</th><th>错误码</th><th>错误描述</th></tr></thead><tbody><tr><td>401</td><td>Unauthorized</td><td>Illegal fresh token</td></tr></tbody></table><p> </p><h2 id="_2-充值" tabindex="-1"><a class="header-anchor" href="#_2-充值" aria-hidden="true">#</a> 2. 充值</h2><p>前端直接通过钱包发送交易进行充值。</p><p> </p><h2 id="_3-单价查询" tabindex="-1"><a class="header-anchor" href="#_3-单价查询" aria-hidden="true">#</a> 3. 单价查询</h2><p>服务端暂未实现。</p><p>请求URL：</p><p>请求方式：GET</p><p>请求头信息：</p><table><thead><tr><th>参数名</th><th>变量</th><th>类型【长度限制】</th><th>必填</th><th>描述</th></tr></thead><tbody><tr><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><p>请求参数：</p><table><thead><tr><th>参数名</th><th>变量</th><th>类型【长度限制】</th><th>必填</th><th>描述</th></tr></thead><tbody><tr><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><p>请求例子：</p><p>返回参数：</p><table><thead><tr><th>参数名</th><th>变量</th><th>类型【长度限制】</th><th>必填</th><th>描述</th></tr></thead><tbody><tr><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><p>返回例子：</p><p>错误码：</p><p> </p><h2 id="_4-套餐查询" tabindex="-1"><a class="header-anchor" href="#_4-套餐查询" aria-hidden="true">#</a> 4. 套餐查询</h2><p>服务端暂未实现。</p><p>请求URL：</p><p>请求方式：GET</p><p>请求头信息：</p><table><thead><tr><th>参数名</th><th>变量</th><th>类型【长度限制】</th><th>必填</th><th>描述</th></tr></thead><tbody><tr><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><p>请求参数：</p><table><thead><tr><th>参数名</th><th>变量</th><th>类型【长度限制】</th><th>必填</th><th>描述</th></tr></thead><tbody><tr><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><p>请求例子：</p><p>返回参数：</p><table><thead><tr><th>参数名</th><th>变量</th><th>类型【长度限制】</th><th>必填</th><th>描述</th></tr></thead><tbody><tr><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><p>返回例子：</p><p>错误码：</p><p> </p><h2 id="_5-购买套餐-充值" tabindex="-1"><a class="header-anchor" href="#_5-购买套餐-充值" aria-hidden="true">#</a> 5. 购买套餐（充值）</h2><p>服务端暂未实现。</p><p>请求URL：POST</p><p>请求方式：</p><p>请求头信息：</p><table><thead><tr><th>参数名</th><th>变量</th><th>类型【长度限制】</th><th>必填</th><th>描述</th></tr></thead><tbody><tr><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><p>请求参数：</p><table><thead><tr><th>参数名</th><th>变量</th><th>类型【长度限制】</th><th>必填</th><th>描述</th></tr></thead><tbody><tr><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><p>请求例子：</p><p>返回参数：</p><table><thead><tr><th>参数名</th><th>变量</th><th>类型【长度限制】</th><th>必填</th><th>描述</th></tr></thead><tbody><tr><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><p>返回例子：</p><p>错误码：</p><p> </p><h2 id="_6-文件上传" tabindex="-1"><a class="header-anchor" href="#_6-文件上传" aria-hidden="true">#</a> 6. 文件上传</h2><p>请求URL：</p><blockquote><p>选择上传至mefs：<a href="http://localhost:8081/mefs/" target="_blank" rel="noopener noreferrer">http://localhost:8081/mefs/`);
  _push(ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
  _push(`</a></p><p>选择上传至ipfs：<a href="http://localhost:8081/ipfs/" target="_blank" rel="noopener noreferrer">http://localhost:8081/ipfs/`);
  _push(ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
  _push(`</a></p></blockquote><p>请求方式：POST</p><p>请求头信息：</p><table><thead><tr><th>参数名</th><th>变量</th></tr></thead><tbody><tr><td>Content-Type</td><td>multipart/form-data</td></tr><tr><td>Authorization</td><td>登录验证产生的access token</td></tr></tbody></table><p>请求参数：</p><table><thead><tr><th>参数名</th><th>变量</th><th>类型【长度限制】</th><th>必填</th><th>描述</th></tr></thead><tbody><tr><td>file</td><td>待上传的文件</td><td>File</td><td>是</td><td></td></tr></tbody></table><p>返回参数(JSON)：</p><table><thead><tr><th>参数名</th><th>变量</th><th>类型【长度限制】</th><th>必填</th><th>描述</th></tr></thead><tbody><tr><td>cid</td><td>上传文件CID</td><td>string</td><td>是</td><td></td></tr></tbody></table><p>返回例子：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>Response：Status <span class="token number">200</span>

<span class="token punctuation">{</span>
     <span class="token property">&quot;cid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;bafybeie2ph7iokrckc5iy6xu7npa4xqst6ez5ewb7j2igeilxjaw6sd2qi&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>请求示例：</p><figure><img${ssrRenderAttr("src", _imports_3)} alt="put1" tabindex="0" loading="lazy"><figcaption>put1</figcaption></figure><figure><img${ssrRenderAttr("src", _imports_4)} alt="put2" tabindex="0" loading="lazy"><figcaption>put2</figcaption></figure><p>错误码：</p><table><thead><tr><th>HTTP状态码</th><th>错误码</th><th>错误描述</th></tr></thead><tbody><tr><td>401</td><td>Authentication</td><td>Token is Null; Invalid token payload; Invalid token;</td></tr><tr><td>500</td><td>InternalError</td><td>We encountered an internal error, please try again.</td></tr><tr><td>518</td><td>Storage</td><td>storage not support</td></tr></tbody></table><p> </p><h2 id="_7-文件下载" tabindex="-1"><a class="header-anchor" href="#_7-文件下载" aria-hidden="true">#</a> 7. 文件下载</h2><p>请求URL：</p><p><a href="http://ip" target="_blank" rel="noopener noreferrer">http://ip`);
  _push(ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
  _push(`</a>:port/mefs/$cid;</p><p><a href="http://ip" target="_blank" rel="noopener noreferrer">http://ip`);
  _push(ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
  _push(`</a>:port/ipfs/$cid;</p><blockquote><p>选择从mefs下载：<a href="http://localhost:8081/mefs/bafkreifzwcj6vkozz6brwutpxl3hqneran4y5vtvirnbrtw3l2m3jtlgq4" target="_blank" rel="noopener noreferrer">http://localhost:8081/mefs/bafkreifzwcj6vkozz6brwutpxl3hqneran4y5vtvirnbrtw3l2m3jtlgq4`);
  _push(ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
  _push(`</a></p><p>选择从ipfs下载：<a href="http://localhost:8081/ipfs/bafkreifzwcj6vkozz6brwutpxl3hqneran4y5vtvirnbrtw3l2m3jtlgq4" target="_blank" rel="noopener noreferrer">http://localhost:8081/ipfs/bafkreifzwcj6vkozz6brwutpxl3hqneran4y5vtvirnbrtw3l2m3jtlgq4`);
  _push(ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
  _push(`</a></p></blockquote><p>请求方式：GET</p><p>请求头信息：</p><p>无</p><p>请求参数：</p><p>无</p><p>返回参数（DataFromReader）：</p><p>返回文件。</p><table><thead><tr><th>参数名</th><th>描述</th><th>值</th></tr></thead><tbody><tr><td>code</td><td>状态码</td><td>200</td></tr><tr><td>contentLength</td><td>文件大小</td><td></td></tr><tr><td>contentType</td><td>文件类型</td><td></td></tr><tr><td>reader</td><td>io.Reader，文件传输缓冲区</td><td></td></tr></tbody></table><p>请求示例：</p><figure><img${ssrRenderAttr("src", _imports_5)} alt="get1" tabindex="0" loading="lazy"><figcaption>get1</figcaption></figure><figure><img${ssrRenderAttr("src", _imports_6)} alt="get2" tabindex="0" loading="lazy"><figcaption>get2</figcaption></figure><p>错误码：</p><table><thead><tr><th>HTTP状态码</th><th>错误码</th><th>错误描述</th></tr></thead><tbody><tr><td>500</td><td>InternalError</td><td>We encountered an internal error, please try again.</td></tr><tr><td>518</td><td>Storage</td><td>storage not support</td></tr><tr><td>517</td><td>Address</td><td>address is null</td></tr></tbody></table><p> </p><h2 id="_8-文件列表查询" tabindex="-1"><a class="header-anchor" href="#_8-文件列表查询" aria-hidden="true">#</a> 8. 文件列表查询</h2><p>请求URL：</p><p><a href="http://ip" target="_blank" rel="noopener noreferrer">http://ip`);
  _push(ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
  _push(`</a>:port/mefs/listobjects</p><p>ipfs的文件列表查询暂未实现</p><blockquote><p><a href="http://localhost:8081/mefs/listobjects" target="_blank" rel="noopener noreferrer">http://localhost:8081/mefs/listobjects`);
  _push(ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
  _push(`</a></p></blockquote><p>请求方式：GET</p><p>将列出登录账户的文件列表。</p><p>请求头信息：</p><table><thead><tr><th>参数名</th><th>变量</th><th>类型【长度限制】</th><th>必填</th><th>描述</th></tr></thead><tbody><tr><td>Authorization</td><td>登录验证产生的accessToken</td><td>string</td><td>是</td><td>若过期，可通过刷新accessToken来获得新的有效accessToken</td></tr></tbody></table><p>请求参数：</p><p>无</p><p>返回参数（JSON）：</p><table><thead><tr><th>参数名</th><th>变量</th><th>类型【长度限制】</th><th>必填</th><th>描述</th></tr></thead><tbody><tr><td>Address</td><td></td><td>string</td><td></td><td>账户以太坊钱包地址</td></tr><tr><td>Storage</td><td></td><td>string</td><td></td><td>mefs或者ipfs</td></tr><tr><td>Object</td><td></td><td>struct</td><td></td><td>文件列表</td></tr></tbody></table><p>每个文件包含信息：</p><table><thead><tr><th>参数名</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>Name</td><td>string</td><td>文件名</td></tr><tr><td>Size</td><td>int64</td><td>文件大小</td></tr><tr><td>Cid</td><td>string</td><td>文件cid</td></tr><tr><td>ModTime</td><td>time</td><td>文件修改时间</td></tr><tr><td>UserDefined</td><td>struct</td><td>关于文件的其他一些信息</td></tr></tbody></table><p>UserDefined结构体包含信息：</p><table><thead><tr><th>参数名</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>encryption</td><td>string</td><td>文件加密方式</td></tr><tr><td>etag</td><td>string</td><td>文件ID模式（默认cid）</td></tr></tbody></table><p>请求示例：</p><figure><img${ssrRenderAttr("src", _imports_7)} alt="list" tabindex="0" loading="lazy"><figcaption>list</figcaption></figure><p>错误码：</p><table><thead><tr><th>HTTP状态码</th><th>错误码</th><th>错误描述</th></tr></thead><tbody><tr><td>401</td><td>Authentication</td><td>Token is Null; Invalid token payload; Invalid token;</td></tr><tr><td>516</td><td>Storage</td><td>list object error %s</td></tr><tr><td>518</td><td>Storage</td><td>storage not support</td></tr></tbody></table><p> </p><h2 id="_9-查询账户余额" tabindex="-1"><a class="header-anchor" href="#_9-查询账户余额" aria-hidden="true">#</a> 9. 查询账户余额</h2><p>请求URL：</p><blockquote><p><a href="http://localhost:8081/mefs/balance" target="_blank" rel="noopener noreferrer">http://localhost:8081/mefs/balance`);
  _push(ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
  _push(`</a></p></blockquote><p>ipfs暂未实现查询账户余额</p><p>请求方式：GET</p><p>请求头信息：</p><table><thead><tr><th>参数名</th><th>变量</th><th>类型【长度限制】</th><th>必填</th><th>描述</th></tr></thead><tbody><tr><td>Authorization</td><td>登录验证产生的accessToken</td><td>string</td><td>是</td><td>若过期，可通过刷新accessToken来获得新的有效accessToken</td></tr></tbody></table><p>请求参数：</p><p>无</p><p>返回参数（JSON）：</p><table><thead><tr><th>参数名</th><th>变量</th><th>类型【长度限制】</th><th>必填</th><th>描述</th></tr></thead><tbody><tr><td>Address</td><td></td><td>string</td><td>是</td><td>登录账户的以太坊钱包地址</td></tr><tr><td>Balance</td><td></td><td>string</td><td>是</td><td>余额的最小单位数字表示</td></tr></tbody></table><p>请求示例：</p><figure><img${ssrRenderAttr("src", _imports_8)} alt="balance" tabindex="0" loading="lazy"><figcaption>balance</figcaption></figure><p>错误码：</p><table><thead><tr><th>HTTP状态码</th><th>错误码</th><th>错误描述</th></tr></thead><tbody><tr><td>401</td><td>Authentication</td><td>Token is Null; Invalid token payload; Invalid token;</td></tr><tr><td>516</td><td>Storage</td><td>make bucket error %s;</td></tr><tr><td>518</td><td>Storage</td><td>storage not support</td></tr><tr><td>520</td><td>Eth</td><td></td></tr></tbody></table><p> </p><h2 id="_10-查询存储空间" tabindex="-1"><a class="header-anchor" href="#_10-查询存储空间" aria-hidden="true">#</a> 10. 查询存储空间</h2><p>请求URL：</p><blockquote><p><a href="http://localhost:8081/mefs/storage" target="_blank" rel="noopener noreferrer">http://localhost:8081/mefs/storage`);
  _push(ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
  _push(`</a></p></blockquote><p>请求方式：GET</p><p>ipfs暂未实现查询存储空间</p><p>请求头信息：</p><table><thead><tr><th>参数名</th><th>变量</th><th>类型【长度限制】</th><th>必填</th><th>描述</th></tr></thead><tbody><tr><td>Authorization</td><td>登录验证产生的accessToken</td><td>string</td><td>是</td><td>若过期，可通过刷新accessToken来获得新的有效accessToken</td></tr></tbody></table><p>请求参数：</p><p>无</p><p>返回参数（JSON）：</p><table><thead><tr><th>参数名</th><th>变量</th><th>类型【长度限制】</th><th>必填</th><th>描述</th></tr></thead><tbody><tr><td>Used</td><td></td><td>string</td><td></td><td>已使用空间</td></tr><tr><td>Available</td><td></td><td>string</td><td></td><td>可用空间</td></tr><tr><td>Free</td><td></td><td>string</td><td></td><td>免费空间</td></tr><tr><td>Files</td><td></td><td>string</td><td></td><td>文件数</td></tr></tbody></table><p>请求示例：</p><figure><img${ssrRenderAttr("src", _imports_9)} alt="storage" tabindex="0" loading="lazy"><figcaption>storage</figcaption></figure><p>错误码：</p><table><thead><tr><th>HTTP状态码</th><th>错误码</th><th>错误描述</th></tr></thead><tbody><tr><td>401</td><td>Authentication</td><td>Token is Null; Invalid token payload; Invalid token;</td></tr></tbody></table></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("../pages/api-docs/middleware/v1.0/中间件HTTPAPI说明文档.html.vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const ___HTTPAPI_____html = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender], ["__file", "中间件HTTPAPI说明文档.html.vue"]]);
export {
  ___HTTPAPI_____html as default
};
